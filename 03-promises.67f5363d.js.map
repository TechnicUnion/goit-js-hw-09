{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,WAAYC,SAASC,kBAAkB,SACvCC,UAAWF,SAASC,kBAAkB,QACtCE,OAAQH,SAASC,kBAAkB,UACnCG,oBAAqBJ,SAASK,cAAc,WAG9C,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAQtC,OAPAC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,GACI,CAAED,WAAUC,Q,IAIvBV,EAAKM,oBAAoBY,iBAAiB,SAE1C,SAAyBC,GACvBA,EAAIC,iBACJ,IAAIC,EAAaC,OAAOtB,EAAKC,WAAW,GAAGsB,OAC3C,GAAIvB,EAAKK,OAAO,GAAGkB,MAAQ,EACzB,OAEF,IAAKC,EAAI,EAAGA,GAAKxB,EAAKK,OAAO,GAAGkB,MAAOC,GAAK,EAC1ChB,EAAcgB,EAAGH,GACdI,MAAK,SAAAC,G,IAAGjB,EAAQiB,EAARjB,SAAUC,EAAKgB,EAALhB,MACjB,OAAOZ,EAAA6B,OAAOC,QAAQ,uBAAwCC,OAAfpB,EAAS,QAAYoB,OAANnB,EAAM,M,IAErEoB,OAAM,SAAAJ,G,IAAGjB,EAAQiB,EAARjB,SAAUC,EAAKgB,EAALhB,MAClB,OAAOZ,EAAA6B,OAAOI,QAAQ,sBAAqCF,OAAfpB,EAAS,QAAYoB,OAANnB,EAAM,M,IAErEW,GAAcC,OAAOtB,EAAKI,UAAU,GAAGmB,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  firstDelay: document.getElementsByName('delay'),\n  stepDelay: document.getElementsByName('step'),\n  amount: document.getElementsByName('amount'),\n  promiseCreateButton: document.querySelector('button'),\n};\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay }); // Fulfill\n      } else {\n        reject({ position, delay }); // Reject\n      }\n    }, delay);\n    return { position, delay };\n  });\n}\n\nrefs.promiseCreateButton.addEventListener('click', onPromiseCreate);\n\nfunction onPromiseCreate(evt) {\n  evt.preventDefault();\n  let totalDelay = Number(refs.firstDelay[0].value);\n  if (refs.amount[0].value < 1) {\n    return;\n  }\n  for (i = 1; i <= refs.amount[0].value; i += 1) {\n    createPromise(i, totalDelay)\n      .then(({ position, delay }) => {\n        return Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        return Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    totalDelay += Number(refs.stepDelay[0].value);\n  }\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$refs","firstDelay","document","getElementsByName","stepDelay","amount","promiseCreateButton","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","evt","preventDefault","totalDelay","Number","value","i","then","param","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.67f5363d.js.map"}